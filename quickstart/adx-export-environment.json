{"storeSnapshot":{"connectionPane":{"favorites":{},"connections":{"azuredataexplorertaken.eastus":{"clusterType":"Engine","alias":"","name":"azuredataexplorertaken.eastus","connectionString":"https://azuredataexplorertaken.eastus.kusto.windows.net/;fed=true","databases":{"azuredataexplorertaken.eastus/TestDatabase":{"id":"azuredataexplorertaken.eastus/TestDatabase","name":"TestDatabase","fetchState":"done","fetchStateError":"","tables":{"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard":{"entityType":"Table","name":"IngestWithWizard","id":"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard","columns":{"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/StartTime":{"entityType":"Column","id":"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/StartTime","name":"StartTime","type":"datetime"},"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/EndTime":{"entityType":"Column","id":"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/EndTime","name":"EndTime","type":"datetime"},"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/EpisodeId":{"entityType":"Column","id":"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/EpisodeId","name":"EpisodeId","type":"long"},"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/EventId":{"entityType":"Column","id":"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/EventId","name":"EventId","type":"long"},"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/State":{"entityType":"Column","id":"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/State","name":"State","type":"string"},"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/EventType":{"entityType":"Column","id":"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/EventType","name":"EventType","type":"string"},"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/InjuriesDirect":{"entityType":"Column","id":"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/InjuriesDirect","name":"InjuriesDirect","type":"long"},"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/InjuriesIndirect":{"entityType":"Column","id":"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/InjuriesIndirect","name":"InjuriesIndirect","type":"long"},"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/DeathsDirect":{"entityType":"Column","id":"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/DeathsDirect","name":"DeathsDirect","type":"long"},"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/DeathsIndirect":{"entityType":"Column","id":"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/DeathsIndirect","name":"DeathsIndirect","type":"long"},"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/DamageProperty":{"entityType":"Column","id":"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/DamageProperty","name":"DamageProperty","type":"long"},"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/DamageCrops":{"entityType":"Column","id":"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/DamageCrops","name":"DamageCrops","type":"long"},"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/Source":{"entityType":"Column","id":"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/Source","name":"Source","type":"string"},"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/BeginLocation":{"entityType":"Column","id":"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/BeginLocation","name":"BeginLocation","type":"string"},"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/EndLocation":{"entityType":"Column","id":"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/EndLocation","name":"EndLocation","type":"string"},"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/BeginLat":{"entityType":"Column","id":"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/BeginLat","name":"BeginLat","type":"real"},"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/BeginLon":{"entityType":"Column","id":"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/BeginLon","name":"BeginLon","type":"real"},"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/EndLat":{"entityType":"Column","id":"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/EndLat","name":"EndLat","type":"real"},"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/EndLon":{"entityType":"Column","id":"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/EndLon","name":"EndLon","type":"real"},"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/EpisodeNarrative":{"entityType":"Column","id":"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/EpisodeNarrative","name":"EpisodeNarrative","type":"string"},"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/EventNarrative":{"entityType":"Column","id":"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/EventNarrative","name":"EventNarrative","type":"string"},"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/StormSummary":{"entityType":"Column","id":"azuredataexplorertaken.eastus/TestDatabase/IngestWithWizard/StormSummary","name":"StormSummary","type":"string"}}}},"functions":{},"accessMode":"ReadWrite","minorVersion":2,"majorVersion":6}},"id":"azuredataexplorertaken.eastus","fetchState":"done","fetchStateError":"","tooBigToCache":false},"help":{"clusterType":"Engine","alias":"","name":"help","connectionString":"https://help.kusto.windows.net/;fed=true","databases":{"help/ContosoSales":{"id":"help/ContosoSales","name":"ContosoSales","fetchState":"done","fetchStateError":"","tables":{"help/ContosoSales/Customers":{"entityType":"Table","name":"Customers","id":"help/ContosoSales/Customers","columns":{"help/ContosoSales/Customers/CityName":{"entityType":"Column","id":"help/ContosoSales/Customers/CityName","name":"CityName","type":"string"},"help/ContosoSales/Customers/CompanyName":{"entityType":"Column","id":"help/ContosoSales/Customers/CompanyName","name":"CompanyName","type":"string"},"help/ContosoSales/Customers/ContinentName":{"entityType":"Column","id":"help/ContosoSales/Customers/ContinentName","name":"ContinentName","type":"string"},"help/ContosoSales/Customers/CustomerKey":{"entityType":"Column","id":"help/ContosoSales/Customers/CustomerKey","name":"CustomerKey","type":"long"},"help/ContosoSales/Customers/Education":{"entityType":"Column","id":"help/ContosoSales/Customers/Education","name":"Education","type":"string"},"help/ContosoSales/Customers/FirstName":{"entityType":"Column","id":"help/ContosoSales/Customers/FirstName","name":"FirstName","type":"string"},"help/ContosoSales/Customers/Gender":{"entityType":"Column","id":"help/ContosoSales/Customers/Gender","name":"Gender","type":"string"},"help/ContosoSales/Customers/LastName":{"entityType":"Column","id":"help/ContosoSales/Customers/LastName","name":"LastName","type":"string"},"help/ContosoSales/Customers/MaritalStatus":{"entityType":"Column","id":"help/ContosoSales/Customers/MaritalStatus","name":"MaritalStatus","type":"string"},"help/ContosoSales/Customers/Occupation":{"entityType":"Column","id":"help/ContosoSales/Customers/Occupation","name":"Occupation","type":"string"},"help/ContosoSales/Customers/RegionCountryName":{"entityType":"Column","id":"help/ContosoSales/Customers/RegionCountryName","name":"RegionCountryName","type":"string"},"help/ContosoSales/Customers/StateProvinceName":{"entityType":"Column","id":"help/ContosoSales/Customers/StateProvinceName","name":"StateProvinceName","type":"string"}}},"help/ContosoSales/Products":{"entityType":"Table","name":"Products","id":"help/ContosoSales/Products","columns":{"help/ContosoSales/Products/ProductName":{"entityType":"Column","id":"help/ContosoSales/Products/ProductName","name":"ProductName","type":"string"},"help/ContosoSales/Products/Manufacturer":{"entityType":"Column","id":"help/ContosoSales/Products/Manufacturer","name":"Manufacturer","type":"string"},"help/ContosoSales/Products/ColorName":{"entityType":"Column","id":"help/ContosoSales/Products/ColorName","name":"ColorName","type":"string"},"help/ContosoSales/Products/ClassName":{"entityType":"Column","id":"help/ContosoSales/Products/ClassName","name":"ClassName","type":"string"},"help/ContosoSales/Products/ProductCategoryName":{"entityType":"Column","id":"help/ContosoSales/Products/ProductCategoryName","name":"ProductCategoryName","type":"string"},"help/ContosoSales/Products/ProductSubcategoryName":{"entityType":"Column","id":"help/ContosoSales/Products/ProductSubcategoryName","name":"ProductSubcategoryName","type":"string"},"help/ContosoSales/Products/ProductKey":{"entityType":"Column","id":"help/ContosoSales/Products/ProductKey","name":"ProductKey","type":"long"}}},"help/ContosoSales/SalesFact":{"entityType":"Table","name":"SalesFact","id":"help/ContosoSales/SalesFact","columns":{"help/ContosoSales/SalesFact/SalesAmount":{"entityType":"Column","id":"help/ContosoSales/SalesFact/SalesAmount","name":"SalesAmount","type":"real"},"help/ContosoSales/SalesFact/TotalCost":{"entityType":"Column","id":"help/ContosoSales/SalesFact/TotalCost","name":"TotalCost","type":"real"},"help/ContosoSales/SalesFact/DateKey":{"entityType":"Column","id":"help/ContosoSales/SalesFact/DateKey","name":"DateKey","type":"datetime"},"help/ContosoSales/SalesFact/ProductKey":{"entityType":"Column","id":"help/ContosoSales/SalesFact/ProductKey","name":"ProductKey","type":"long"},"help/ContosoSales/SalesFact/CustomerKey":{"entityType":"Column","id":"help/ContosoSales/SalesFact/CustomerKey","name":"CustomerKey","type":"long"}}},"help/ContosoSales/SalesTable":{"entityType":"Table","name":"SalesTable","id":"help/ContosoSales/SalesTable","columns":{"help/ContosoSales/SalesTable/SalesAmount":{"entityType":"Column","id":"help/ContosoSales/SalesTable/SalesAmount","name":"SalesAmount","type":"real"},"help/ContosoSales/SalesTable/DateKey":{"entityType":"Column","id":"help/ContosoSales/SalesTable/DateKey","name":"DateKey","type":"datetime"},"help/ContosoSales/SalesTable/TotalCost":{"entityType":"Column","id":"help/ContosoSales/SalesTable/TotalCost","name":"TotalCost","type":"real"},"help/ContosoSales/SalesTable/FirstName":{"entityType":"Column","id":"help/ContosoSales/SalesTable/FirstName","name":"FirstName","type":"string"},"help/ContosoSales/SalesTable/LastName":{"entityType":"Column","id":"help/ContosoSales/SalesTable/LastName","name":"LastName","type":"string"},"help/ContosoSales/SalesTable/MaritalStatus":{"entityType":"Column","id":"help/ContosoSales/SalesTable/MaritalStatus","name":"MaritalStatus","type":"string"},"help/ContosoSales/SalesTable/Gender":{"entityType":"Column","id":"help/ContosoSales/SalesTable/Gender","name":"Gender","type":"string"},"help/ContosoSales/SalesTable/Education":{"entityType":"Column","id":"help/ContosoSales/SalesTable/Education","name":"Education","type":"string"},"help/ContosoSales/SalesTable/Occupation":{"entityType":"Column","id":"help/ContosoSales/SalesTable/Occupation","name":"Occupation","type":"string"},"help/ContosoSales/SalesTable/ColorName":{"entityType":"Column","id":"help/ContosoSales/SalesTable/ColorName","name":"ColorName","type":"string"},"help/ContosoSales/SalesTable/State":{"entityType":"Column","id":"help/ContosoSales/SalesTable/State","name":"State","type":"string"},"help/ContosoSales/SalesTable/Country":{"entityType":"Column","id":"help/ContosoSales/SalesTable/Country","name":"Country","type":"string"},"help/ContosoSales/SalesTable/City":{"entityType":"Column","id":"help/ContosoSales/SalesTable/City","name":"City","type":"string"},"help/ContosoSales/SalesTable/ClassName":{"entityType":"Column","id":"help/ContosoSales/SalesTable/ClassName","name":"ClassName","type":"string"},"help/ContosoSales/SalesTable/ProductKey":{"entityType":"Column","id":"help/ContosoSales/SalesTable/ProductKey","name":"ProductKey","type":"long"},"help/ContosoSales/SalesTable/CustomerKey":{"entityType":"Column","id":"help/ContosoSales/SalesTable/CustomerKey","name":"CustomerKey","type":"long"}}}},"functions":{},"accessMode":"ReadWrite","minorVersion":5,"majorVersion":36},"help/SampleLogs":{"id":"help/SampleLogs","name":"SampleLogs","fetchState":"done","fetchStateError":"","tables":{"help/SampleLogs/RawLogs":{"entityType":"Table","name":"RawLogs","id":"help/SampleLogs/RawLogs","columns":{"help/SampleLogs/RawLogs/fields":{"entityType":"Column","id":"help/SampleLogs/RawLogs/fields","name":"fields","type":"dynamic"},"help/SampleLogs/RawLogs/name":{"entityType":"Column","id":"help/SampleLogs/RawLogs/name","name":"name","type":"string"},"help/SampleLogs/RawLogs/tags":{"entityType":"Column","id":"help/SampleLogs/RawLogs/tags","name":"tags","type":"dynamic"},"help/SampleLogs/RawLogs/timestamp":{"entityType":"Column","id":"help/SampleLogs/RawLogs/timestamp","name":"timestamp","type":"datetime"}}},"help/SampleLogs/TransformedLogs":{"entityType":"Table","name":"TransformedLogs","id":"help/SampleLogs/TransformedLogs","columns":{"help/SampleLogs/TransformedLogs/name":{"entityType":"Column","id":"help/SampleLogs/TransformedLogs/name","name":"name","type":"string"},"help/SampleLogs/TransformedLogs/timestamp":{"entityType":"Column","id":"help/SampleLogs/TransformedLogs/timestamp","name":"timestamp","type":"datetime"},"help/SampleLogs/TransformedLogs/facility_code":{"entityType":"Column","id":"help/SampleLogs/TransformedLogs/facility_code","name":"facility_code","type":"int"},"help/SampleLogs/TransformedLogs/message":{"entityType":"Column","id":"help/SampleLogs/TransformedLogs/message","name":"message","type":"string"},"help/SampleLogs/TransformedLogs/procid":{"entityType":"Column","id":"help/SampleLogs/TransformedLogs/procid","name":"procid","type":"long"},"help/SampleLogs/TransformedLogs/severity_code":{"entityType":"Column","id":"help/SampleLogs/TransformedLogs/severity_code","name":"severity_code","type":"int"},"help/SampleLogs/TransformedLogs/SysLogTimestamp":{"entityType":"Column","id":"help/SampleLogs/TransformedLogs/SysLogTimestamp","name":"SysLogTimestamp","type":"datetime"},"help/SampleLogs/TransformedLogs/version":{"entityType":"Column","id":"help/SampleLogs/TransformedLogs/version","name":"version","type":"real"},"help/SampleLogs/TransformedLogs/appname":{"entityType":"Column","id":"help/SampleLogs/TransformedLogs/appname","name":"appname","type":"string"},"help/SampleLogs/TransformedLogs/facility":{"entityType":"Column","id":"help/SampleLogs/TransformedLogs/facility","name":"facility","type":"string"},"help/SampleLogs/TransformedLogs/host":{"entityType":"Column","id":"help/SampleLogs/TransformedLogs/host","name":"host","type":"string"},"help/SampleLogs/TransformedLogs/hostname":{"entityType":"Column","id":"help/SampleLogs/TransformedLogs/hostname","name":"hostname","type":"string"},"help/SampleLogs/TransformedLogs/severity":{"entityType":"Column","id":"help/SampleLogs/TransformedLogs/severity","name":"severity","type":"string"}}}},"functions":{"$function_help/SampleLogs/Transform_RawLogs":{"entityType":"Function","body":"{\nRawLogs\n| extend facility_code=toint(fields.facility_code), message=tostring(fields.message), procid= tolong(fields.procid), severity_code=toint(fields.severity_code), \nSysLogTimestamp=unixtime_nanoseconds_todatetime(tolong(fields.timestamp)), version= todouble(fields.version), \nappname= tostring(tags.appname), facility= tostring(tags.facility),host= tostring(tags.host), hostname=tostring(tags.hostname), severity=tostring(tags.severity)\n| project-away fields, tags\n}","functionKind":"Unknown","name":"Transform_RawLogs","outputColumns":[],"inputParameters":[],"id":"$function_help/SampleLogs/Transform_RawLogs"}},"accessMode":"ReadWrite","minorVersion":8477,"majorVersion":56},"help/SampleMetrics":{"id":"help/SampleMetrics","name":"SampleMetrics","fetchState":"done","fetchStateError":"","tables":{"help/SampleMetrics/RawMetrics":{"entityType":"Table","name":"RawMetrics","id":"help/SampleMetrics/RawMetrics","columns":{"help/SampleMetrics/RawMetrics/fields":{"entityType":"Column","id":"help/SampleMetrics/RawMetrics/fields","name":"fields","type":"dynamic"},"help/SampleMetrics/RawMetrics/name":{"entityType":"Column","id":"help/SampleMetrics/RawMetrics/name","name":"name","type":"string"},"help/SampleMetrics/RawMetrics/tags":{"entityType":"Column","id":"help/SampleMetrics/RawMetrics/tags","name":"tags","type":"dynamic"},"help/SampleMetrics/RawMetrics/timestamp":{"entityType":"Column","id":"help/SampleMetrics/RawMetrics/timestamp","name":"timestamp","type":"datetime"}}},"help/SampleMetrics/TransformedMetrics":{"entityType":"Table","name":"TransformedMetrics","id":"help/SampleMetrics/TransformedMetrics","columns":{"help/SampleMetrics/TransformedMetrics/SQLMetrics":{"entityType":"Column","id":"help/SampleMetrics/TransformedMetrics/SQLMetrics","name":"SQLMetrics","type":"string"},"help/SampleMetrics/TransformedMetrics/Value":{"entityType":"Column","id":"help/SampleMetrics/TransformedMetrics/Value","name":"Value","type":"real"},"help/SampleMetrics/TransformedMetrics/MetricType":{"entityType":"Column","id":"help/SampleMetrics/TransformedMetrics/MetricType","name":"MetricType","type":"string"},"help/SampleMetrics/TransformedMetrics/Timestamp":{"entityType":"Column","id":"help/SampleMetrics/TransformedMetrics/Timestamp","name":"Timestamp","type":"datetime"},"help/SampleMetrics/TransformedMetrics/Host":{"entityType":"Column","id":"help/SampleMetrics/TransformedMetrics/Host","name":"Host","type":"string"},"help/SampleMetrics/TransformedMetrics/MeasurementDbType":{"entityType":"Column","id":"help/SampleMetrics/TransformedMetrics/MeasurementDbType","name":"MeasurementDbType","type":"string"},"help/SampleMetrics/TransformedMetrics/SQLInstance":{"entityType":"Column","id":"help/SampleMetrics/TransformedMetrics/SQLInstance","name":"SQLInstance","type":"string"}}}},"functions":{"$function_help/SampleMetrics/Transform_RawMetrics":{"entityType":"Function","body":"{\nRawMetrics \n| mv-apply fields on (extend key = tostring(bag_keys(fields)[0]))\n| project SQLMetrics=key, Value=todouble(fields[key]), MetricType=name, Timestamp=timestamp, Host=tostring(['tags'].host), MeasurementDbType=tostring(['tags'].measurement_db_type), SQLInstance=tostring(['tags'].sql_instance)\n}","functionKind":"Unknown","name":"Transform_RawMetrics","outputColumns":[],"inputParameters":[],"id":"$function_help/SampleMetrics/Transform_RawMetrics"}},"accessMode":"ReadWrite","minorVersion":1,"majorVersion":16},"help/Samples":{"id":"help/Samples","name":"Samples","fetchState":"done","fetchStateError":"","tables":{"help/Samples/ConferenceSessions":{"entityType":"Table","name":"ConferenceSessions","id":"help/Samples/ConferenceSessions","columns":{"help/Samples/ConferenceSessions/conference":{"entityType":"Column","id":"help/Samples/ConferenceSessions/conference","name":"conference","type":"string"},"help/Samples/ConferenceSessions/sessionid":{"entityType":"Column","id":"help/Samples/ConferenceSessions/sessionid","name":"sessionid","type":"string"},"help/Samples/ConferenceSessions/session_title":{"entityType":"Column","id":"help/Samples/ConferenceSessions/session_title","name":"session_title","type":"string"},"help/Samples/ConferenceSessions/session_type":{"entityType":"Column","id":"help/Samples/ConferenceSessions/session_type","name":"session_type","type":"string"},"help/Samples/ConferenceSessions/owner":{"entityType":"Column","id":"help/Samples/ConferenceSessions/owner","name":"owner","type":"string"},"help/Samples/ConferenceSessions/participants":{"entityType":"Column","id":"help/Samples/ConferenceSessions/participants","name":"participants","type":"string"},"help/Samples/ConferenceSessions/URL":{"entityType":"Column","id":"help/Samples/ConferenceSessions/URL","name":"URL","type":"string"},"help/Samples/ConferenceSessions/level":{"entityType":"Column","id":"help/Samples/ConferenceSessions/level","name":"level","type":"int"},"help/Samples/ConferenceSessions/session_location":{"entityType":"Column","id":"help/Samples/ConferenceSessions/session_location","name":"session_location","type":"string"},"help/Samples/ConferenceSessions/starttime":{"entityType":"Column","id":"help/Samples/ConferenceSessions/starttime","name":"starttime","type":"datetime"},"help/Samples/ConferenceSessions/duration":{"entityType":"Column","id":"help/Samples/ConferenceSessions/duration","name":"duration","type":"int"},"help/Samples/ConferenceSessions/time_and_duration":{"entityType":"Column","id":"help/Samples/ConferenceSessions/time_and_duration","name":"time_and_duration","type":"string"},"help/Samples/ConferenceSessions/kusto_affinity":{"entityType":"Column","id":"help/Samples/ConferenceSessions/kusto_affinity","name":"kusto_affinity","type":"string"}},"folder":"ADX_Conferences"},"help/Samples/Covid19":{"entityType":"Table","name":"Covid19","id":"help/Samples/Covid19","columns":{"help/Samples/Covid19/Timestamp":{"entityType":"Column","id":"help/Samples/Covid19/Timestamp","name":"Timestamp","type":"datetime"},"help/Samples/Covid19/Country":{"entityType":"Column","id":"help/Samples/Covid19/Country","name":"Country","type":"string"},"help/Samples/Covid19/State":{"entityType":"Column","id":"help/Samples/Covid19/State","name":"State","type":"string"},"help/Samples/Covid19/CountryCode":{"entityType":"Column","id":"help/Samples/Covid19/CountryCode","name":"CountryCode","type":"string"},"help/Samples/Covid19/StateCode":{"entityType":"Column","id":"help/Samples/Covid19/StateCode","name":"StateCode","type":"string"},"help/Samples/Covid19/Latitute":{"entityType":"Column","id":"help/Samples/Covid19/Latitute","name":"Latitute","type":"real"},"help/Samples/Covid19/Longtitude":{"entityType":"Column","id":"help/Samples/Covid19/Longtitude","name":"Longtitude","type":"real"},"help/Samples/Covid19/Confirmed":{"entityType":"Column","id":"help/Samples/Covid19/Confirmed","name":"Confirmed","type":"long"},"help/Samples/Covid19/Deaths":{"entityType":"Column","id":"help/Samples/Covid19/Deaths","name":"Deaths","type":"long"},"help/Samples/Covid19/Recovered":{"entityType":"Column","id":"help/Samples/Covid19/Recovered","name":"Recovered","type":"long"},"help/Samples/Covid19/Active":{"entityType":"Column","id":"help/Samples/Covid19/Active","name":"Active","type":"long"}},"folder":"Covid19"},"help/Samples/Covid19_Bing":{"entityType":"Table","name":"Covid19_Bing","id":"help/Samples/Covid19_Bing","columns":{"help/Samples/Covid19_Bing/Location":{"entityType":"Column","id":"help/Samples/Covid19_Bing/Location","name":"Location","type":"dynamic"},"help/Samples/Covid19_Bing/Confirmed":{"entityType":"Column","id":"help/Samples/Covid19_Bing/Confirmed","name":"Confirmed","type":"dynamic"},"help/Samples/Covid19_Bing/Active":{"entityType":"Column","id":"help/Samples/Covid19_Bing/Active","name":"Active","type":"dynamic"},"help/Samples/Covid19_Bing/Deaths":{"entityType":"Column","id":"help/Samples/Covid19_Bing/Deaths","name":"Deaths","type":"dynamic"},"help/Samples/Covid19_Bing/Recovered":{"entityType":"Column","id":"help/Samples/Covid19_Bing/Recovered","name":"Recovered","type":"dynamic"},"help/Samples/Covid19_Bing/ReportDate":{"entityType":"Column","id":"help/Samples/Covid19_Bing/ReportDate","name":"ReportDate","type":"datetime"},"help/Samples/Covid19_Bing/Id":{"entityType":"Column","id":"help/Samples/Covid19_Bing/Id","name":"Id","type":"string"},"help/Samples/Covid19_Bing/LastUpdated":{"entityType":"Column","id":"help/Samples/Covid19_Bing/LastUpdated","name":"LastUpdated","type":"string"},"help/Samples/Covid19_Bing/LastRefreshed":{"entityType":"Column","id":"help/Samples/Covid19_Bing/LastRefreshed","name":"LastRefreshed","type":"string"},"help/Samples/Covid19_Bing/Sources":{"entityType":"Column","id":"help/Samples/Covid19_Bing/Sources","name":"Sources","type":"string"},"help/Samples/Covid19_Bing/AreaInfo":{"entityType":"Column","id":"help/Samples/Covid19_Bing/AreaInfo","name":"AreaInfo","type":"dynamic"},"help/Samples/Covid19_Bing/Location_1":{"entityType":"Column","id":"help/Samples/Covid19_Bing/Location_1","name":"Location_1","type":"string"},"help/Samples/Covid19_Bing/ReportDate_1":{"entityType":"Column","id":"help/Samples/Covid19_Bing/ReportDate_1","name":"ReportDate_1","type":"string"},"help/Samples/Covid19_Bing/LastUpdated_1":{"entityType":"Column","id":"help/Samples/Covid19_Bing/LastUpdated_1","name":"LastUpdated_1","type":"datetime"},"help/Samples/Covid19_Bing/LastRefreshed_1":{"entityType":"Column","id":"help/Samples/Covid19_Bing/LastRefreshed_1","name":"LastRefreshed_1","type":"datetime"},"help/Samples/Covid19_Bing/Sources_1":{"entityType":"Column","id":"help/Samples/Covid19_Bing/Sources_1","name":"Sources_1","type":"dynamic"}},"folder":"Covid19","docstring":"Data source: https://bing.com/covid19"},"help/Samples/Covid19_map2":{"entityType":"Table","name":"Covid19_map2","id":"help/Samples/Covid19_map2","columns":{"help/Samples/Covid19_map2/AreaInfo":{"entityType":"Column","id":"help/Samples/Covid19_map2/AreaInfo","name":"AreaInfo","type":"dynamic"},"help/Samples/Covid19_map2/Location":{"entityType":"Column","id":"help/Samples/Covid19_map2/Location","name":"Location","type":"string"},"help/Samples/Covid19_map2/Confirmed":{"entityType":"Column","id":"help/Samples/Covid19_map2/Confirmed","name":"Confirmed","type":"dynamic"},"help/Samples/Covid19_map2/Active":{"entityType":"Column","id":"help/Samples/Covid19_map2/Active","name":"Active","type":"dynamic"},"help/Samples/Covid19_map2/Deaths":{"entityType":"Column","id":"help/Samples/Covid19_map2/Deaths","name":"Deaths","type":"dynamic"},"help/Samples/Covid19_map2/Recovered":{"entityType":"Column","id":"help/Samples/Covid19_map2/Recovered","name":"Recovered","type":"dynamic"},"help/Samples/Covid19_map2/ReportDate":{"entityType":"Column","id":"help/Samples/Covid19_map2/ReportDate","name":"ReportDate","type":"string"},"help/Samples/Covid19_map2/Id":{"entityType":"Column","id":"help/Samples/Covid19_map2/Id","name":"Id","type":"string"},"help/Samples/Covid19_map2/LastUpdated":{"entityType":"Column","id":"help/Samples/Covid19_map2/LastUpdated","name":"LastUpdated","type":"datetime"},"help/Samples/Covid19_map2/LastRefreshed":{"entityType":"Column","id":"help/Samples/Covid19_map2/LastRefreshed","name":"LastRefreshed","type":"datetime"},"help/Samples/Covid19_map2/Sources":{"entityType":"Column","id":"help/Samples/Covid19_map2/Sources","name":"Sources","type":"dynamic"}},"folder":"Covid19"},"help/Samples/DailyCovid19":{"entityType":"MaterializedViewTable","name":"DailyCovid19","id":"help/Samples/DailyCovid19","columns":{"help/Samples/DailyCovid19/Timestamp":{"entityType":"Column","id":"help/Samples/DailyCovid19/Timestamp","name":"Timestamp","type":"datetime"},"help/Samples/DailyCovid19/Country":{"entityType":"Column","id":"help/Samples/DailyCovid19/Country","name":"Country","type":"string"},"help/Samples/DailyCovid19/State":{"entityType":"Column","id":"help/Samples/DailyCovid19/State","name":"State","type":"string"},"help/Samples/DailyCovid19/CountryCode":{"entityType":"Column","id":"help/Samples/DailyCovid19/CountryCode","name":"CountryCode","type":"string"},"help/Samples/DailyCovid19/StateCode":{"entityType":"Column","id":"help/Samples/DailyCovid19/StateCode","name":"StateCode","type":"string"},"help/Samples/DailyCovid19/max_Confirmed":{"entityType":"Column","id":"help/Samples/DailyCovid19/max_Confirmed","name":"max_Confirmed","type":"long"},"help/Samples/DailyCovid19/max_Deaths":{"entityType":"Column","id":"help/Samples/DailyCovid19/max_Deaths","name":"max_Deaths","type":"long"},"help/Samples/DailyCovid19/max_Recovered":{"entityType":"Column","id":"help/Samples/DailyCovid19/max_Recovered","name":"max_Recovered","type":"long"},"help/Samples/DailyCovid19/max_Active":{"entityType":"Column","id":"help/Samples/DailyCovid19/max_Active","name":"max_Active","type":"long"}},"folder":"Covid19"},"help/Samples/demo_clustering1":{"entityType":"Table","name":"demo_clustering1","id":"help/Samples/demo_clustering1","columns":{"help/Samples/demo_clustering1/PreciseTimeStamp":{"entityType":"Column","id":"help/Samples/demo_clustering1/PreciseTimeStamp","name":"PreciseTimeStamp","type":"datetime"},"help/Samples/demo_clustering1/Region":{"entityType":"Column","id":"help/Samples/demo_clustering1/Region","name":"Region","type":"string"},"help/Samples/demo_clustering1/ScaleUnit":{"entityType":"Column","id":"help/Samples/demo_clustering1/ScaleUnit","name":"ScaleUnit","type":"string"},"help/Samples/demo_clustering1/DeploymentId":{"entityType":"Column","id":"help/Samples/demo_clustering1/DeploymentId","name":"DeploymentId","type":"string"},"help/Samples/demo_clustering1/Tracepoint":{"entityType":"Column","id":"help/Samples/demo_clustering1/Tracepoint","name":"Tracepoint","type":"long"},"help/Samples/demo_clustering1/ServiceHost":{"entityType":"Column","id":"help/Samples/demo_clustering1/ServiceHost","name":"ServiceHost","type":"string"}},"folder":"TimeSeries_and_ML"},"help/Samples/demo_make_series1":{"entityType":"Table","name":"demo_make_series1","id":"help/Samples/demo_make_series1","columns":{"help/Samples/demo_make_series1/TimeStamp":{"entityType":"Column","id":"help/Samples/demo_make_series1/TimeStamp","name":"TimeStamp","type":"datetime"},"help/Samples/demo_make_series1/BrowserVer":{"entityType":"Column","id":"help/Samples/demo_make_series1/BrowserVer","name":"BrowserVer","type":"string"},"help/Samples/demo_make_series1/OsVer":{"entityType":"Column","id":"help/Samples/demo_make_series1/OsVer","name":"OsVer","type":"string"},"help/Samples/demo_make_series1/Country":{"entityType":"Column","id":"help/Samples/demo_make_series1/Country","name":"Country","type":"string"}},"folder":"TimeSeries_and_ML"},"help/Samples/demo_make_series2":{"entityType":"Table","name":"demo_make_series2","id":"help/Samples/demo_make_series2","columns":{"help/Samples/demo_make_series2/sid":{"entityType":"Column","id":"help/Samples/demo_make_series2/sid","name":"sid","type":"string"},"help/Samples/demo_make_series2/TimeStamp":{"entityType":"Column","id":"help/Samples/demo_make_series2/TimeStamp","name":"TimeStamp","type":"datetime"},"help/Samples/demo_make_series2/num":{"entityType":"Column","id":"help/Samples/demo_make_series2/num","name":"num","type":"real"}},"folder":"TimeSeries_and_ML"},"help/Samples/demo_many_series1":{"entityType":"Table","name":"demo_many_series1","id":"help/Samples/demo_many_series1","columns":{"help/Samples/demo_many_series1/TIMESTAMP":{"entityType":"Column","id":"help/Samples/demo_many_series1/TIMESTAMP","name":"TIMESTAMP","type":"datetime"},"help/Samples/demo_many_series1/Loc":{"entityType":"Column","id":"help/Samples/demo_many_series1/Loc","name":"Loc","type":"string"},"help/Samples/demo_many_series1/Op":{"entityType":"Column","id":"help/Samples/demo_many_series1/Op","name":"Op","type":"string"},"help/Samples/demo_many_series1/DB":{"entityType":"Column","id":"help/Samples/demo_many_series1/DB","name":"DB","type":"string"},"help/Samples/demo_many_series1/DataRead":{"entityType":"Column","id":"help/Samples/demo_many_series1/DataRead","name":"DataRead","type":"long"}},"folder":"TimeSeries_and_ML"},"help/Samples/demo_prometheus":{"entityType":"Table","name":"demo_prometheus","id":"help/Samples/demo_prometheus","columns":{"help/Samples/demo_prometheus/TimeStamp":{"entityType":"Column","id":"help/Samples/demo_prometheus/TimeStamp","name":"TimeStamp","type":"datetime"},"help/Samples/demo_prometheus/Name":{"entityType":"Column","id":"help/Samples/demo_prometheus/Name","name":"Name","type":"string"},"help/Samples/demo_prometheus/Labels":{"entityType":"Column","id":"help/Samples/demo_prometheus/Labels","name":"Labels","type":"dynamic"},"help/Samples/demo_prometheus/Val":{"entityType":"Column","id":"help/Samples/demo_prometheus/Val","name":"Val","type":"real"}},"folder":"TimeSeries_and_ML"},"help/Samples/demo_series2":{"entityType":"Table","name":"demo_series2","id":"help/Samples/demo_series2","columns":{"help/Samples/demo_series2/id":{"entityType":"Column","id":"help/Samples/demo_series2/id","name":"id","type":"string"},"help/Samples/demo_series2/x":{"entityType":"Column","id":"help/Samples/demo_series2/x","name":"x","type":"dynamic"},"help/Samples/demo_series2/y":{"entityType":"Column","id":"help/Samples/demo_series2/y","name":"y","type":"dynamic"}},"folder":"TimeSeries_and_ML"},"help/Samples/demo_series3":{"entityType":"Table","name":"demo_series3","id":"help/Samples/demo_series3","columns":{"help/Samples/demo_series3/id":{"entityType":"Column","id":"help/Samples/demo_series3/id","name":"id","type":"string"},"help/Samples/demo_series3/t":{"entityType":"Column","id":"help/Samples/demo_series3/t","name":"t","type":"dynamic"},"help/Samples/demo_series3/num":{"entityType":"Column","id":"help/Samples/demo_series3/num","name":"num","type":"dynamic"}},"folder":"TimeSeries_and_ML"},"help/Samples/irregular_ts":{"entityType":"Table","name":"irregular_ts","id":"help/Samples/irregular_ts","columns":{"help/Samples/irregular_ts/OsVer":{"entityType":"Column","id":"help/Samples/irregular_ts/OsVer","name":"OsVer","type":"string"},"help/Samples/irregular_ts/TimeStamp":{"entityType":"Column","id":"help/Samples/irregular_ts/TimeStamp","name":"TimeStamp","type":"dynamic"},"help/Samples/irregular_ts/num":{"entityType":"Column","id":"help/Samples/irregular_ts/num","name":"num","type":"dynamic"}},"folder":"TimeSeries_and_ML"},"help/Samples/OccupancyDetection":{"entityType":"Table","name":"OccupancyDetection","id":"help/Samples/OccupancyDetection","columns":{"help/Samples/OccupancyDetection/Timestamp":{"entityType":"Column","id":"help/Samples/OccupancyDetection/Timestamp","name":"Timestamp","type":"datetime"},"help/Samples/OccupancyDetection/Temperature":{"entityType":"Column","id":"help/Samples/OccupancyDetection/Temperature","name":"Temperature","type":"real"},"help/Samples/OccupancyDetection/Humidity":{"entityType":"Column","id":"help/Samples/OccupancyDetection/Humidity","name":"Humidity","type":"real"},"help/Samples/OccupancyDetection/Light":{"entityType":"Column","id":"help/Samples/OccupancyDetection/Light","name":"Light","type":"real"},"help/Samples/OccupancyDetection/CO2":{"entityType":"Column","id":"help/Samples/OccupancyDetection/CO2","name":"CO2","type":"real"},"help/Samples/OccupancyDetection/HumidityRatio":{"entityType":"Column","id":"help/Samples/OccupancyDetection/HumidityRatio","name":"HumidityRatio","type":"real"},"help/Samples/OccupancyDetection/Occupancy":{"entityType":"Column","id":"help/Samples/OccupancyDetection/Occupancy","name":"Occupancy","type":"bool"},"help/Samples/OccupancyDetection/Test":{"entityType":"Column","id":"help/Samples/OccupancyDetection/Test","name":"Test","type":"bool"}},"folder":"TimeSeries_and_ML"},"help/Samples/PopulationData":{"entityType":"Table","name":"PopulationData","id":"help/Samples/PopulationData","columns":{"help/Samples/PopulationData/State":{"entityType":"Column","id":"help/Samples/PopulationData/State","name":"State","type":"string"},"help/Samples/PopulationData/Population":{"entityType":"Column","id":"help/Samples/PopulationData/Population","name":"Population","type":"long"}}},"help/Samples/SamplePowerRequirementHistorizedData":{"entityType":"Table","name":"SamplePowerRequirementHistorizedData","id":"help/Samples/SamplePowerRequirementHistorizedData","columns":{"help/Samples/SamplePowerRequirementHistorizedData/timestamp":{"entityType":"Column","id":"help/Samples/SamplePowerRequirementHistorizedData/timestamp","name":"timestamp","type":"datetime"},"help/Samples/SamplePowerRequirementHistorizedData/twinId":{"entityType":"Column","id":"help/Samples/SamplePowerRequirementHistorizedData/twinId","name":"twinId","type":"string"},"help/Samples/SamplePowerRequirementHistorizedData/modelId":{"entityType":"Column","id":"help/Samples/SamplePowerRequirementHistorizedData/modelId","name":"modelId","type":"string"},"help/Samples/SamplePowerRequirementHistorizedData/name":{"entityType":"Column","id":"help/Samples/SamplePowerRequirementHistorizedData/name","name":"name","type":"string"},"help/Samples/SamplePowerRequirementHistorizedData/value":{"entityType":"Column","id":"help/Samples/SamplePowerRequirementHistorizedData/value","name":"value","type":"real"},"help/Samples/SamplePowerRequirementHistorizedData/relationshipTarget":{"entityType":"Column","id":"help/Samples/SamplePowerRequirementHistorizedData/relationshipTarget","name":"relationshipTarget","type":"dynamic"},"help/Samples/SamplePowerRequirementHistorizedData/relationshipId":{"entityType":"Column","id":"help/Samples/SamplePowerRequirementHistorizedData/relationshipId","name":"relationshipId","type":"dynamic"}},"folder":"IoT","docstring":"Contains historized property values over a one month period"},"help/Samples/StormEvents":{"entityType":"Table","name":"StormEvents","id":"help/Samples/StormEvents","columns":{"help/Samples/StormEvents/StartTime":{"entityType":"Column","id":"help/Samples/StormEvents/StartTime","name":"StartTime","type":"datetime"},"help/Samples/StormEvents/EndTime":{"entityType":"Column","id":"help/Samples/StormEvents/EndTime","name":"EndTime","type":"datetime"},"help/Samples/StormEvents/EpisodeId":{"entityType":"Column","id":"help/Samples/StormEvents/EpisodeId","name":"EpisodeId","type":"int"},"help/Samples/StormEvents/EventId":{"entityType":"Column","id":"help/Samples/StormEvents/EventId","name":"EventId","type":"int"},"help/Samples/StormEvents/State":{"entityType":"Column","id":"help/Samples/StormEvents/State","name":"State","type":"string"},"help/Samples/StormEvents/EventType":{"entityType":"Column","id":"help/Samples/StormEvents/EventType","name":"EventType","type":"string"},"help/Samples/StormEvents/InjuriesDirect":{"entityType":"Column","id":"help/Samples/StormEvents/InjuriesDirect","name":"InjuriesDirect","type":"int"},"help/Samples/StormEvents/InjuriesIndirect":{"entityType":"Column","id":"help/Samples/StormEvents/InjuriesIndirect","name":"InjuriesIndirect","type":"int"},"help/Samples/StormEvents/DeathsDirect":{"entityType":"Column","id":"help/Samples/StormEvents/DeathsDirect","name":"DeathsDirect","type":"int"},"help/Samples/StormEvents/DeathsIndirect":{"entityType":"Column","id":"help/Samples/StormEvents/DeathsIndirect","name":"DeathsIndirect","type":"int"},"help/Samples/StormEvents/DamageProperty":{"entityType":"Column","id":"help/Samples/StormEvents/DamageProperty","name":"DamageProperty","type":"int"},"help/Samples/StormEvents/DamageCrops":{"entityType":"Column","id":"help/Samples/StormEvents/DamageCrops","name":"DamageCrops","type":"int"},"help/Samples/StormEvents/Source":{"entityType":"Column","id":"help/Samples/StormEvents/Source","name":"Source","type":"string"},"help/Samples/StormEvents/BeginLocation":{"entityType":"Column","id":"help/Samples/StormEvents/BeginLocation","name":"BeginLocation","type":"string"},"help/Samples/StormEvents/EndLocation":{"entityType":"Column","id":"help/Samples/StormEvents/EndLocation","name":"EndLocation","type":"string"},"help/Samples/StormEvents/BeginLat":{"entityType":"Column","id":"help/Samples/StormEvents/BeginLat","name":"BeginLat","type":"real"},"help/Samples/StormEvents/BeginLon":{"entityType":"Column","id":"help/Samples/StormEvents/BeginLon","name":"BeginLon","type":"real"},"help/Samples/StormEvents/EndLat":{"entityType":"Column","id":"help/Samples/StormEvents/EndLat","name":"EndLat","type":"real"},"help/Samples/StormEvents/EndLon":{"entityType":"Column","id":"help/Samples/StormEvents/EndLon","name":"EndLon","type":"real"},"help/Samples/StormEvents/EpisodeNarrative":{"entityType":"Column","id":"help/Samples/StormEvents/EpisodeNarrative","name":"EpisodeNarrative","type":"string"},"help/Samples/StormEvents/EventNarrative":{"entityType":"Column","id":"help/Samples/StormEvents/EventNarrative","name":"EventNarrative","type":"string"},"help/Samples/StormEvents/StormSummary":{"entityType":"Column","id":"help/Samples/StormEvents/StormSummary","name":"StormSummary","type":"dynamic"}},"folder":"Storm_Events","docstring":"US storm events. Data source: https://www.ncdc.noaa.gov/stormevents"},"help/Samples/TaxiRides":{"entityType":"ExternalTable","name":"TaxiRides","id":"help/Samples/TaxiRides","columns":{"help/Samples/TaxiRides/trip_id":{"entityType":"Column","id":"help/Samples/TaxiRides/trip_id","name":"trip_id","type":"long"},"help/Samples/TaxiRides/vendor_id":{"entityType":"Column","id":"help/Samples/TaxiRides/vendor_id","name":"vendor_id","type":"string"},"help/Samples/TaxiRides/pickup_datetime":{"entityType":"Column","id":"help/Samples/TaxiRides/pickup_datetime","name":"pickup_datetime","type":"datetime"},"help/Samples/TaxiRides/dropoff_datetime":{"entityType":"Column","id":"help/Samples/TaxiRides/dropoff_datetime","name":"dropoff_datetime","type":"datetime"},"help/Samples/TaxiRides/store_and_fwd_flag":{"entityType":"Column","id":"help/Samples/TaxiRides/store_and_fwd_flag","name":"store_and_fwd_flag","type":"string"},"help/Samples/TaxiRides/rate_code_id":{"entityType":"Column","id":"help/Samples/TaxiRides/rate_code_id","name":"rate_code_id","type":"int"},"help/Samples/TaxiRides/pickup_longitude":{"entityType":"Column","id":"help/Samples/TaxiRides/pickup_longitude","name":"pickup_longitude","type":"real"},"help/Samples/TaxiRides/pickup_latitude":{"entityType":"Column","id":"help/Samples/TaxiRides/pickup_latitude","name":"pickup_latitude","type":"real"},"help/Samples/TaxiRides/dropoff_longitude":{"entityType":"Column","id":"help/Samples/TaxiRides/dropoff_longitude","name":"dropoff_longitude","type":"real"},"help/Samples/TaxiRides/dropoff_latitude":{"entityType":"Column","id":"help/Samples/TaxiRides/dropoff_latitude","name":"dropoff_latitude","type":"real"},"help/Samples/TaxiRides/passenger_count":{"entityType":"Column","id":"help/Samples/TaxiRides/passenger_count","name":"passenger_count","type":"int"},"help/Samples/TaxiRides/trip_distance":{"entityType":"Column","id":"help/Samples/TaxiRides/trip_distance","name":"trip_distance","type":"real"},"help/Samples/TaxiRides/fare_amount":{"entityType":"Column","id":"help/Samples/TaxiRides/fare_amount","name":"fare_amount","type":"real"},"help/Samples/TaxiRides/extra":{"entityType":"Column","id":"help/Samples/TaxiRides/extra","name":"extra","type":"real"},"help/Samples/TaxiRides/mta_tax":{"entityType":"Column","id":"help/Samples/TaxiRides/mta_tax","name":"mta_tax","type":"real"},"help/Samples/TaxiRides/tip_amount":{"entityType":"Column","id":"help/Samples/TaxiRides/tip_amount","name":"tip_amount","type":"real"},"help/Samples/TaxiRides/tolls_amount":{"entityType":"Column","id":"help/Samples/TaxiRides/tolls_amount","name":"tolls_amount","type":"real"},"help/Samples/TaxiRides/ehail_fee":{"entityType":"Column","id":"help/Samples/TaxiRides/ehail_fee","name":"ehail_fee","type":"real"},"help/Samples/TaxiRides/improvement_surcharge":{"entityType":"Column","id":"help/Samples/TaxiRides/improvement_surcharge","name":"improvement_surcharge","type":"real"},"help/Samples/TaxiRides/total_amount":{"entityType":"Column","id":"help/Samples/TaxiRides/total_amount","name":"total_amount","type":"real"},"help/Samples/TaxiRides/payment_type":{"entityType":"Column","id":"help/Samples/TaxiRides/payment_type","name":"payment_type","type":"string"},"help/Samples/TaxiRides/trip_type":{"entityType":"Column","id":"help/Samples/TaxiRides/trip_type","name":"trip_type","type":"int"},"help/Samples/TaxiRides/pickup":{"entityType":"Column","id":"help/Samples/TaxiRides/pickup","name":"pickup","type":"string"},"help/Samples/TaxiRides/dropoff":{"entityType":"Column","id":"help/Samples/TaxiRides/dropoff","name":"dropoff","type":"string"},"help/Samples/TaxiRides/cab_type":{"entityType":"Column","id":"help/Samples/TaxiRides/cab_type","name":"cab_type","type":"string"},"help/Samples/TaxiRides/precipitation":{"entityType":"Column","id":"help/Samples/TaxiRides/precipitation","name":"precipitation","type":"int"},"help/Samples/TaxiRides/snow_depth":{"entityType":"Column","id":"help/Samples/TaxiRides/snow_depth","name":"snow_depth","type":"int"},"help/Samples/TaxiRides/snowfall":{"entityType":"Column","id":"help/Samples/TaxiRides/snowfall","name":"snowfall","type":"int"},"help/Samples/TaxiRides/max_temperature":{"entityType":"Column","id":"help/Samples/TaxiRides/max_temperature","name":"max_temperature","type":"int"},"help/Samples/TaxiRides/min_temperature":{"entityType":"Column","id":"help/Samples/TaxiRides/min_temperature","name":"min_temperature","type":"int"},"help/Samples/TaxiRides/average_wind_speed":{"entityType":"Column","id":"help/Samples/TaxiRides/average_wind_speed","name":"average_wind_speed","type":"int"},"help/Samples/TaxiRides/pickup_nyct2010_gid":{"entityType":"Column","id":"help/Samples/TaxiRides/pickup_nyct2010_gid","name":"pickup_nyct2010_gid","type":"int"},"help/Samples/TaxiRides/pickup_ctlabel":{"entityType":"Column","id":"help/Samples/TaxiRides/pickup_ctlabel","name":"pickup_ctlabel","type":"string"},"help/Samples/TaxiRides/pickup_borocode":{"entityType":"Column","id":"help/Samples/TaxiRides/pickup_borocode","name":"pickup_borocode","type":"int"},"help/Samples/TaxiRides/pickup_boroname":{"entityType":"Column","id":"help/Samples/TaxiRides/pickup_boroname","name":"pickup_boroname","type":"string"},"help/Samples/TaxiRides/pickup_ct2010":{"entityType":"Column","id":"help/Samples/TaxiRides/pickup_ct2010","name":"pickup_ct2010","type":"string"},"help/Samples/TaxiRides/pickup_boroct2010":{"entityType":"Column","id":"help/Samples/TaxiRides/pickup_boroct2010","name":"pickup_boroct2010","type":"string"},"help/Samples/TaxiRides/pickup_cdeligibil":{"entityType":"Column","id":"help/Samples/TaxiRides/pickup_cdeligibil","name":"pickup_cdeligibil","type":"string"},"help/Samples/TaxiRides/pickup_ntacode":{"entityType":"Column","id":"help/Samples/TaxiRides/pickup_ntacode","name":"pickup_ntacode","type":"string"},"help/Samples/TaxiRides/pickup_ntaname":{"entityType":"Column","id":"help/Samples/TaxiRides/pickup_ntaname","name":"pickup_ntaname","type":"string"},"help/Samples/TaxiRides/pickup_puma":{"entityType":"Column","id":"help/Samples/TaxiRides/pickup_puma","name":"pickup_puma","type":"string"},"help/Samples/TaxiRides/dropoff_nyct2010_gid":{"entityType":"Column","id":"help/Samples/TaxiRides/dropoff_nyct2010_gid","name":"dropoff_nyct2010_gid","type":"int"},"help/Samples/TaxiRides/dropoff_ctlabel":{"entityType":"Column","id":"help/Samples/TaxiRides/dropoff_ctlabel","name":"dropoff_ctlabel","type":"string"},"help/Samples/TaxiRides/dropoff_borocode":{"entityType":"Column","id":"help/Samples/TaxiRides/dropoff_borocode","name":"dropoff_borocode","type":"int"},"help/Samples/TaxiRides/dropoff_boroname":{"entityType":"Column","id":"help/Samples/TaxiRides/dropoff_boroname","name":"dropoff_boroname","type":"string"},"help/Samples/TaxiRides/dropoff_ct2010":{"entityType":"Column","id":"help/Samples/TaxiRides/dropoff_ct2010","name":"dropoff_ct2010","type":"string"},"help/Samples/TaxiRides/dropoff_boroct2010":{"entityType":"Column","id":"help/Samples/TaxiRides/dropoff_boroct2010","name":"dropoff_boroct2010","type":"string"},"help/Samples/TaxiRides/dropoff_cdeligibil":{"entityType":"Column","id":"help/Samples/TaxiRides/dropoff_cdeligibil","name":"dropoff_cdeligibil","type":"string"},"help/Samples/TaxiRides/dropoff_ntacode":{"entityType":"Column","id":"help/Samples/TaxiRides/dropoff_ntacode","name":"dropoff_ntacode","type":"string"},"help/Samples/TaxiRides/dropoff_ntaname":{"entityType":"Column","id":"help/Samples/TaxiRides/dropoff_ntaname","name":"dropoff_ntaname","type":"string"},"help/Samples/TaxiRides/dropoff_puma":{"entityType":"Column","id":"help/Samples/TaxiRides/dropoff_puma","name":"dropoff_puma","type":"string"}},"folder":"ExternalTables","docstring":"NYC taxi rides. Data source: https://www1.nyc.gov/site/tlc/about/tlc-trip-record-data.page"},"help/Samples/US_Counties":{"entityType":"Table","name":"US_Counties","id":"help/Samples/US_Counties","columns":{"help/Samples/US_Counties/features":{"entityType":"Column","id":"help/Samples/US_Counties/features","name":"features","type":"dynamic"}},"folder":"Geospatial","docstring":"US Counties. Data source: https://www.census.gov/geographies/mapping-files/time-series/geo/cartographic-boundary.html"},"help/Samples/US_States":{"entityType":"Table","name":"US_States","id":"help/Samples/US_States","columns":{"help/Samples/US_States/features":{"entityType":"Column","id":"help/Samples/US_States/features","name":"features","type":"dynamic"}},"folder":"Geospatial","docstring":"US States. Data source: https://www.census.gov/geographies/mapping-files/time-series/geo/cartographic-boundary.html"}},"functions":{"$function_help/Samples/MyFunction1":{"entityType":"Function","body":"{     StormEvents     | limit 100 }  ","docstring":"Simple demo function","folder":"Demo","functionKind":"Unknown","name":"MyFunction1","outputColumns":[],"inputParameters":[],"id":"$function_help/Samples/MyFunction1"},"$function_help/Samples/MyFunction2":{"entityType":"Function","body":"{     StormEvents     | limit myLimit }  ","docstring":"Demo function with parameter","folder":"Demo","functionKind":"Unknown","name":"MyFunction2","outputColumns":[],"inputParameters":[{"cslType":"long","name":"myLimit","type":"System.Int64"}],"id":"$function_help/Samples/MyFunction2"},"$function_help/Samples/MyFunction3":{"entityType":"Function","body":"{     MyFunction(100) }  ","docstring":"Function calling other function","folder":"Demo","functionKind":"Unknown","name":"MyFunction3","outputColumns":[],"inputParameters":[],"id":"$function_help/Samples/MyFunction3"},"$function_help/Samples/MyFunction4":{"entityType":"Function","body":"{\r\n    let limitVar = 100;\r\n    let result = MyFunction(limitVar);\r\n    result\r\n} ","docstring":"Function calling other function","folder":"Demo","functionKind":"Unknown","name":"MyFunction4","outputColumns":[],"inputParameters":[],"id":"$function_help/Samples/MyFunction4"},"$function_help/Samples/MyFunction":{"entityType":"Function","body":"{\r\n    StormEvents\r\n    | limit someLimit\r\n} ","docstring":"Simple demo function","folder":"Demo","functionKind":"Unknown","name":"MyFunction","outputColumns":[],"inputParameters":[{"cslType":"long","name":"someLimit","type":"System.Int64"}],"id":"$function_help/Samples/MyFunction"},"$function_help/Samples/InterestingStates":{"entityType":"Function","body":"{\r\n    dynamic([\"WASHINGTON\", \"FLORIDA\", \"GEORGIA\", \"NEW YORK\"])\r\n}","docstring":"A list of interesting states","folder":"Helpers","functionKind":"Unknown","name":"InterestingStates","outputColumns":[],"inputParameters":[],"id":"$function_help/Samples/InterestingStates"},"$function_help/Samples/Trim":{"entityType":"Function","body":"{extract(@\"\\s*(.*)\",1,text)}","docstring":"Remove Spaces","folder":"Demo","functionKind":"Unknown","name":"Trim","outputColumns":[],"inputParameters":[{"cslType":"string","name":"text","type":"System.String"}],"id":"$function_help/Samples/Trim"},"$function_help/Samples/MyCalc":{"entityType":"Function","body":"{a+b+c}","docstring":"","folder":"","functionKind":"Unknown","name":"MyCalc","outputColumns":[],"inputParameters":[{"cslType":"real","name":"a","type":"System.Double"},{"cslType":"real","name":"b","type":"System.Double"},{"cslType":"real","name":"c","type":"System.Double"}],"id":"$function_help/Samples/MyCalc"},"$function_help/Samples/MyFunction5":{"entityType":"Function","body":"{StormEvents | limit myLimit}\n","docstring":"Demo function with parameter","folder":"Demo","functionKind":"Unknown","name":"MyFunction5","outputColumns":[],"inputParameters":[{"cslType":"long","name":"myLimit","type":"System.Int64"}],"id":"$function_help/Samples/MyFunction5"},"$function_help/Samples/Add":{"entityType":"Function","body":"{a+b}","functionKind":"Unknown","name":"Add","outputColumns":[],"inputParameters":[{"cslType":"real","name":"a","type":"System.Double"},{"cslType":"real","name":"b","type":"System.Double"}],"id":"$function_help/Samples/Add"},"$function_help/Samples/MyFunctionDate":{"entityType":"Function","body":"{\r\n    StormEvents\r\n    | where EndTime <= timestamp\r\n}","docstring":"Demo function with date","folder":"Demo","functionKind":"Unknown","name":"MyFunctionDate","outputColumns":[],"inputParameters":[{"cslType":"datetime","name":"timestamp","type":"System.DateTime"}],"id":"$function_help/Samples/MyFunctionDate"},"$function_help/Samples/MyFunction6":{"entityType":"Function","body":"{StromEvents | limit myLimit}","docstring":"demo function with parameter","folder":"Demo","functionKind":"Unknown","name":"MyFunction6","outputColumns":[],"inputParameters":[{"cslType":"long","name":"myLimit","type":"System.Int64"}],"id":"$function_help/Samples/MyFunction6"},"$function_help/Samples/StormsReportedBySource":{"entityType":"Function","body":"{\r\n    StormEvents\r\n    | where Source == source\r\n}","folder":"StormEventsFunctions","functionKind":"Unknown","name":"StormsReportedBySource","outputColumns":[],"inputParameters":[{"cslType":"string","name":"source","type":"System.String"}],"id":"$function_help/Samples/StormsReportedBySource"},"$function_help/Samples/TableAccess":{"entityType":"Function","body":"{\r\n    table(tableName) | count\r\n}","docstring":"Table access example","functionKind":"Unknown","name":"TableAccess","outputColumns":[],"inputParameters":[{"cslType":"string","name":"tableName","type":"System.String"}],"id":"$function_help/Samples/TableAccess"},"$function_help/Samples/DirectTableAccess":{"entityType":"Function","body":"{\r\n    myTable | count\r\n}","docstring":"Direct table access example","functionKind":"Unknown","name":"DirectTableAccess","outputColumns":[],"inputParameters":[{"name":"myTable","columns":[]}],"id":"$function_help/Samples/DirectTableAccess"},"$function_help/Samples/get_modules_version_sf":{"entityType":"Function","body":"{\r\n    let code =\r\n    'import importlib\\n'\r\n    'import sys\\n'\r\n    '\\n'\r\n    'result = df\\n'\r\n    'for i in range(df.shape[0]):\\n'\r\n    '    try:\\n'\r\n    '        m = importlib.import_module(df.iloc[i, 0])\\n'\r\n    '        result.loc[i, \"ver\"] = m.__version__ if hasattr(m, \"__version__\") else \"missing __version__ attribute\"\\n'\r\n    '    except Exception as ex:\\n'\r\n    '        result.loc[i, \"ver\"] = \"ERROR: \" + (ex.msg if hasattr(ex, \"msg\") else \"exception, no msg\")\\n'\r\n    'id = df.shape[0]\\n'\r\n    'result.loc[id, df.columns[0]] = \"Python\"\\n'\r\n    'result.loc[id, \"ver\"] = sys.version\\n';\r\n    modules | evaluate python(code, 'df(*),ver:string')\r\n}","docstring":"Returns version information for the Python engine and the specified packages","folder":"Packages\\Utils","functionKind":"Unknown","name":"get_modules_version_sf","outputColumns":[],"inputParameters":[{"name":"modules","columns":[]}],"id":"$function_help/Samples/get_modules_version_sf"},"$function_help/Samples/StormsReportedByStateAndSource":{"entityType":"Function","body":"{\r\n    StormEvents\r\n    | where State == state\r\n    | where Source == source\r\n}","docstring":"","folder":"StormEventsFunctions","functionKind":"Unknown","name":"StormsReportedByStateAndSource","outputColumns":[],"inputParameters":[{"cslType":"string","name":"state","type":"System.String"},{"cslType":"string","name":"source","type":"System.String"}],"id":"$function_help/Samples/StormsReportedByStateAndSource"},"$function_help/Samples/StormEventsStates":{"entityType":"Function","body":"{\r\n    StormEvents\r\n    | summarize by State\r\n}","folder":"StormEventsFunctions","functionKind":"Unknown","name":"StormEventsStates","outputColumns":[],"inputParameters":[],"id":"$function_help/Samples/StormEventsStates"},"$function_help/Samples/PQ_ComplexTableParam":{"entityType":"Function","body":"{\r\n    d\r\n}","docstring":"Test Doc","folder":"PQTest","functionKind":"Unknown","name":"PQ_ComplexTableParam","outputColumns":[],"inputParameters":[{"name":"d","columns":[{"name":"a","type":"System.String","cslType":"string"},{"name":"b","type":"System.Int32","cslType":"int"},{"name":"c\"","type":"System.TimeSpan","cslType":"timespan"}]},{"name":"q","columns":[]},{"cslType":"dynamic","name":"j","type":"System.Object"},{"cslType":"bool","name":"e","type":"System.SByte","cslDefaultValue":"true"},{"cslType":"string","name":"f","type":"System.String","cslDefaultValue":"\"TestDefault\""},{"cslType":"int","name":"g","type":"System.Int32","cslDefaultValue":"42"},{"cslType":"long","name":"h","type":"System.Int64","cslDefaultValue":"345678"},{"cslType":"real","name":"i","type":"System.Double","cslDefaultValue":"real(+inf)"},{"cslType":"real","name":"k","type":"System.Double","cslDefaultValue":"0.444"},{"cslType":"timespan","name":"l","type":"System.TimeSpan","cslDefaultValue":"time(1.00:00:00)"},{"cslType":"decimal","name":"m","type":"System.Data.SqlTypes.SqlDecimal","cslDefaultValue":"decimal(0.33)"},{"cslType":"datetime","name":"n","type":"System.DateTime","cslDefaultValue":"datetime(2000-01-01T12:34:56.7890000Z)"},{"cslType":"datetime","name":"o","type":"System.DateTime","cslDefaultValue":"datetime(2022-01-24T15:45:57.6512401Z)"},{"cslType":"decimal","name":"p","type":"System.Data.SqlTypes.SqlDecimal","cslDefaultValue":"decimal(100000)"},{"cslType":"guid","name":"r","type":"System.Guid","cslDefaultValue":"guid(74be27de-1e4e-49d9-b579-fe0b331d3642)"},{"cslType":"string","name":"s","type":"System.String","cslDefaultValue":"\"\\'\""}],"id":"$function_help/Samples/PQ_ComplexTableParam"},"$function_help/Samples/JoinCorona":{"entityType":"Function","body":"{\r\nCoronaConfirmed\r\n| extend Confirmed= Count\r\n| join kind=fullouter \r\n(CoronaDeaths | extend Deaths = Count) on ProvinceOrState, CountryOrRegion, Timestamp\r\n| join kind=fullouter \r\n(CoronaRecovered | extend Recovered = Count) on ProvinceOrState, CountryOrRegion, Timestamp\r\n| project Timestamp, CountryOrRegion, ProvinceOrState, Confirmed, Deaths, Recovered, Lat, Long\r\n| where Confirmed >0 or Deaths > 0 or Recovered > 0\r\n}","folder":"CoronaVirus","functionKind":"Unknown","name":"JoinCorona","outputColumns":[],"inputParameters":[],"id":"$function_help/Samples/JoinCorona"},"$function_help/Samples/UpdateCovidCountries":{"entityType":"Function","body":"{\nlet lastRefreshed = toscalar(CovidCountries | summarize max(LastRefreshed)); \nlet newRefreshed = toscalar(externaldata(d:string)[\"https://binganswer.blob.core.windows.net/cssegisanddata/Covid19.Country.json\"]\r\nwith(format=txt)\r\n| mv-expand todynamic(d)\n| evaluate bag_unpack(d)\n| summarize max(LastRefreshed));\nlet RequiresUpdate = lastRefreshed < newRefreshed; \nexternaldata(d:string)[\"https://binganswer.blob.core.windows.net/cssegisanddata/Covid19.Country.json\"]\r\nwith(format=txt)\r\n| mv-expand todynamic(d)\r\n| evaluate bag_unpack(d)\r\n| project ReportDate, LastUpdated, LastRefreshed, Country, Province, Latitude, Longitude, Confirmed, ConfirmedChange, Recovered, RecoveredChange, Deaths, DeathsChange, Active\n| join kind=leftanti\n(\n    CovidCountries |summarize arg_max(LastRefreshed, *) by Country, Province\n) on Country, Province, Confirmed, Recovered, Deaths\n| where RequiresUpdate \n}","folder":"CoronaVirus","functionKind":"Unknown","name":"UpdateCovidCountries","outputColumns":[],"inputParameters":[],"id":"$function_help/Samples/UpdateCovidCountries"},"$function_help/Samples/Covid19_flat":{"entityType":"Function","body":"{    \r\n    let Historic =\r\n    Covid19_Bing\r\n    | extend Id = iff(Id == \"/\" and isnotempty(Location.CountryName) and Location.CountryName != \"Worldwide\", strcat('/', Location.CountryName), Id)\r\n    | project \r\n        ReportDate,\r\n        Country = tostring(Location.CountryName),\r\n        Longitude = toreal(Location.Longitude),\r\n        Latitude = toreal(Location.Latitude),\r\n        Confirmed = tolong(Confirmed.Value), ConfirmedChange = tolong(Confirmed.Change), \r\n        Active = tolong(Active.Value), ActiveChange = tolong(Active.Change), \r\n        Deaths = tolong(Deaths.Value), DeathsChange = tolong(Deaths.Change),\r\n        Id,  \r\n        Location;\r\n     let IdMap = Historic | where ReportDate > ago(5d) | extend State = Location.StateCode | extend StateOrCountry= iff(isempty(State), Country, State) |  summarize by StateOrCountry, Id;         \r\n     let Recent = Covid19_map2 \r\n        | project \r\n                ReportDate = LastUpdated,\r\n                Country = tostring(AreaInfo.CountryName),\r\n                Longitude = todouble(AreaInfo.Longitude),\r\n                Latitude = todouble(AreaInfo.Latitude),\r\n                Confirmed = tolong(Confirmed.Value), ConfirmedChange = tolong(Confirmed.Change),\r\n                Active = tolong(Active.Value), ActiveChange = tolong(Active.Change),\r\n                Deaths = tolong(Deaths.Value), DeathsChange = tolong(Deaths.Change),\r\n                Recovered = tolong(Recovered.Value), RecoveredChange = tolong(Recovered.Change),\r\n                State = tostring(AreaInfo.StateName)\r\n        | extend Active = iff(isempty(Active) and Confirmed >0 , Confirmed - Deaths - iff(isempty(Recovered), 0, Recovered), Active)\r\n        | extend StateOrCountry = iff(isempty(State), Country, State)\r\n        | join (IdMap) on StateOrCountry | project-away StateOrCountry, StateOrCountry1, State\r\n        | summarize arg_max(ReportDate, *) by Id;\r\n        Historic | union Recent\r\n}","folder":"Covid19_Bing","functionKind":"Unknown","name":"Covid19_flat","outputColumns":[],"inputParameters":[],"id":"$function_help/Samples/Covid19_flat"},"$function_help/Samples/temp":{"entityType":"Function","body":"{    \r\n    let Historic =\r\n    Covid19_Bing\r\n    | extend Id = iff(Id == \"/\" and isnotempty(Location.CountryName) and Location.CountryName != \"Worldwide\", strcat('/', Location.CountryName), Id)\r\n    | project \r\n        ReportDate,\r\n        Country = tostring(Location.CountryName),\r\n        Longitude = toreal(Location.Longitude),\r\n        Latitude = toreal(Location.Latitude),\r\n        Confirmed = tolong(Confirmed.Value), ConfirmedChange = tolong(Confirmed.Change), \r\n        Active = tolong(Active.Value), ActiveChange = tolong(Active.Change), \r\n        Deaths = tolong(Deaths.Value), DeathsChange = tolong(Deaths.Change),\r\n        Id,  \r\n        Location;\r\n     let IdMap = Historic | where ReportDate > ago(5d) | extend State = Location.StateCode | extend StateOrCountry= iff(isempty(State), Country, State) |  summarize by StateOrCountry, Id;         \r\n     let Recent = Covid19_map2 \r\n        | project \r\n                ReportDate = LastUpdated,\r\n                Country = tostring(AreaInfo.CountryName),\r\n                Longitude = todouble(AreaInfo.Longitude),\r\n                Latitude = todouble(AreaInfo.Latitude),\r\n                Confirmed = tolong(Confirmed.Value), ConfirmedChange = tolong(Confirmed.Change),\r\n                Active = tolong(Confirmed.Value), ActiveChange = tolong(Confirmed.Change),\r\n                Deaths = tolong(Deaths.Value), DeathsChange = tolong(Deaths.Change),\r\n                State = tostring(AreaInfo.StateName)\r\n        | extend StateOrCountry = iff(isempty(State), Country, State)\r\n        | join (IdMap) on StateOrCountry | project-away StateOrCountry, StateOrCountry1, State;\r\n        Historic | union Recent\r\n}","functionKind":"Unknown","name":"temp","outputColumns":[],"inputParameters":[],"id":"$function_help/Samples/temp"},"$function_help/Samples/series_moving_avg_fl":{"entityType":"Function","body":"{\r\n    series_fir(y_series, repeat(1, n), true, center)\r\n}","docstring":"Calculate moving average of specified width","folder":"Packages\\Series","functionKind":"Unknown","name":"series_moving_avg_fl","outputColumns":[],"inputParameters":[{"cslType":"dynamic","name":"y_series","type":"System.Object"},{"cslType":"int","name":"n","type":"System.Int32"},{"cslType":"bool","name":"center","type":"System.SByte","cslDefaultValue":"false"}],"id":"$function_help/Samples/series_moving_avg_fl"},"$function_help/Samples/series_dot_product_fl":{"entityType":"Function","body":"{\r\n    let elem_prod = series_multiply(vec1, vec2);\r\n    let cum_sum = series_iir(elem_prod, dynamic([1]), dynamic([1,-1]));\r\n    todouble(cum_sum[-1])\r\n}","docstring":"Calculate the dot product of 2 numerical arrays","folder":"Packages\\Series","functionKind":"Unknown","name":"series_dot_product_fl","outputColumns":[],"inputParameters":[{"cslType":"dynamic","name":"vec1","type":"System.Object"},{"cslType":"dynamic","name":"vec2","type":"System.Object"}],"id":"$function_help/Samples/series_dot_product_fl"},"$function_help/Samples/series_exp_smoothing_fl":{"entityType":"Function","body":"{\r\n    series_iir(y_series, pack_array(alpha), pack_array(1, alpha-1))\r\n}","docstring":"Basic exponential smoothing for a series","folder":"Packages\\Series","functionKind":"Unknown","name":"series_exp_smoothing_fl","outputColumns":[],"inputParameters":[{"cslType":"dynamic","name":"y_series","type":"System.Object"},{"cslType":"real","name":"alpha","type":"System.Double","cslDefaultValue":"0.5"}],"id":"$function_help/Samples/series_exp_smoothing_fl"},"$function_help/Samples/series_downsample_fl":{"entityType":"Function","body":"{\r\n    tbl\r\n    | extend _t_ = column_ifexists(t_col, dynamic(0)), _y_ = column_ifexists(y_col, dynamic(0))\r\n    | extend _y_ = series_fir(_y_, repeat(1, sampling_factor), true, true)    //  apply a simple low pass filter before sub-sampling\r\n    | mv-apply _t_ to typeof(DateTime), _y_ to typeof(double) on\r\n    (extend rid=row_number()-1\r\n    | where rid % sampling_factor == ceiling(sampling_factor/2.0)-1                    //  sub-sampling\r\n    | summarize _t_ = make_list(_t_), _y_ = make_list(_y_))\r\n    | extend cols = pack(ds_t_col, _t_, ds_y_col, _y_)\r\n    | project-away _t_, _y_\r\n    | evaluate bag_unpack(cols)\r\n}","docstring":"Downsampling a series by an integer factor","folder":"Packages\\Series","functionKind":"Unknown","name":"series_downsample_fl","outputColumns":[],"inputParameters":[{"name":"tbl","columns":[]},{"cslType":"string","name":"t_col","type":"System.String"},{"cslType":"string","name":"y_col","type":"System.String"},{"cslType":"string","name":"ds_t_col","type":"System.String"},{"cslType":"string","name":"ds_y_col","type":"System.String"},{"cslType":"int","name":"sampling_factor","type":"System.Int32"}],"id":"$function_help/Samples/series_downsample_fl"},"$function_help/Samples/series_metric_fl":{"entityType":"Function","body":"{\r\n    let selector_d=iff(labels_selector == '', dynamic(['']), split(labels_selector, ','));\r\n    let etime = ago(offset);\r\n    let stime = etime - lookback;\r\n    metrics_tbl\r\n    | extend timestamp = column_ifexists(timestamp_col, datetime(null)), name = column_ifexists(name_col, ''), labels = column_ifexists(labels_col, dynamic(null)), value = column_ifexists(value_col, 0)\r\n    | extend labels = dynamic_to_json(labels)       //  convert to string and sort by key\r\n    | where name == metric_name and timestamp between(stime..etime)\r\n    | order by timestamp asc\r\n    | summarize timestamp = make_list(timestamp), value=make_list(value) by name, labels\r\n    | where labels has_all (selector_d)\r\n}","docstring":"Selecting & retrieving metrics like PromQL","folder":"Packages\\Series","functionKind":"Unknown","name":"series_metric_fl","outputColumns":[],"inputParameters":[{"name":"metrics_tbl","columns":[]},{"cslType":"string","name":"timestamp_col","type":"System.String"},{"cslType":"string","name":"name_col","type":"System.String"},{"cslType":"string","name":"labels_col","type":"System.String"},{"cslType":"string","name":"value_col","type":"System.String"},{"cslType":"string","name":"metric_name","type":"System.String"},{"cslType":"string","name":"labels_selector","type":"System.String","cslDefaultValue":"\"\""},{"cslType":"timespan","name":"lookback","type":"System.TimeSpan","cslDefaultValue":"time(00:10:00)"},{"cslType":"timespan","name":"offset","type":"System.TimeSpan","cslDefaultValue":"time(00:00:00)"}],"id":"$function_help/Samples/series_metric_fl"},"$function_help/Samples/series_rate_fl":{"entityType":"Function","body":"{\r\n    tbl\r\n    | where fix_reset                                                   //  Prometheus counters can only go up\r\n    | mv-apply value to typeof(double) on   \r\n    ( extend correction = iff(value < prev(value), prev(value), 0.0)    // if the value decreases we assume it was reset to 0, so add last value\r\n    | extend cum_correction = row_cumsum(correction)\r\n    | extend corrected_value = value + cum_correction\r\n    | summarize value = make_list(corrected_value))\r\n    | union (tbl | where not(fix_reset))\r\n    | extend timestampS = array_shift_right(timestamp, n_bins), valueS = array_shift_right(value, n_bins)\r\n    | extend dt = series_subtract(timestamp, timestampS)\r\n    | extend dt = series_divide(dt, 1e7)                              //  converts from ticks to seconds\r\n    | extend dv = series_subtract(value, valueS)\r\n    | extend rate = series_divide(dv, dt)\r\n    | project-away dt, dv, timestampS, value, valueS\r\n}","docstring":"Simulate PromQL rate()","folder":"Packages\\Series","functionKind":"Unknown","name":"series_rate_fl","outputColumns":[],"inputParameters":[{"name":"tbl","columns":[{"name":"timestamp","type":"System.Object","cslType":"dynamic"},{"name":"value","type":"System.Object","cslType":"dynamic"}]},{"cslType":"int","name":"n_bins","type":"System.Int32","cslDefaultValue":"1"},{"cslType":"bool","name":"fix_reset","type":"System.SByte","cslDefaultValue":"true"}],"id":"$function_help/Samples/series_rate_fl"},"$function_help/Samples/GetStatesWithPopulationSmallerThan":{"entityType":"Function","body":"{ \n    PopulationData\n    | where Population < amount\n    | project State;\n}","functionKind":"Unknown","name":"GetStatesWithPopulationSmallerThan","outputColumns":[],"inputParameters":[{"cslType":"long","name":"amount","type":"System.Int64"}],"id":"$function_help/Samples/GetStatesWithPopulationSmallerThan"},"$function_help/Samples/factorial_fl":{"entityType":"Function","body":"{\r\n    tolong(gamma(n+1))\r\n}","docstring":"Calculate factorial","folder":"Packages\\Stats","functionKind":"Unknown","name":"factorial_fl","outputColumns":[],"inputParameters":[{"cslType":"int","name":"n","type":"System.Int32"}],"id":"$function_help/Samples/factorial_fl"},"$function_help/Samples/perm_fl":{"entityType":"Function","body":"{\r\n    let fact_n = gamma(n+1);\r\n    let fact_nk = gamma(n-k+1);\r\n    tolong(fact_n/fact_nk)\r\n}","docstring":"Calculate number of combinations of selecting k items from total n items with order","folder":"Packages\\Stats","functionKind":"Unknown","name":"perm_fl","outputColumns":[],"inputParameters":[{"cslType":"int","name":"n","type":"System.Int32"},{"cslType":"int","name":"k","type":"System.Int32"}],"id":"$function_help/Samples/perm_fl"},"$function_help/Samples/comb_fl":{"entityType":"Function","body":"{\r\n    let fact_n = gamma(n+1);\r\n    let fact_nk = gamma(n-k+1);\r\n    let fact_k = gamma(k+1);\r\n    tolong(fact_n/fact_nk/fact_k)\r\n}","docstring":"Calculate number of combinations for selection of k items out of n items without order","folder":"Packages\\Stats","functionKind":"Unknown","name":"comb_fl","outputColumns":[],"inputParameters":[{"cslType":"int","name":"n","type":"System.Int32"},{"cslType":"int","name":"k","type":"System.Int32"}],"id":"$function_help/Samples/comb_fl"},"$function_help/Samples/EventsByStates":{"entityType":"Function","body":"{  \r\n    StormEvents\r\n   | where (\"__SelectAll__\" in(EventTypeParam)) or (EventType in (EventTypeParam))\r\n   | summarize Events=count() by EventType,State\r\n}","folder":"StormEventsFunctions","functionKind":"Unknown","name":"EventsByStates","outputColumns":[],"inputParameters":[{"cslType":"dynamic","name":"EventTypeParam","type":"System.Object"}],"id":"$function_help/Samples/EventsByStates"}},"accessMode":"ReadWrite","minorVersion":0,"majorVersion":3311}},"id":"help","fetchState":"done","fetchStateError":"","tooBigToCache":false}},"entityInContext":"help/Samples","showOnlyFavorites":false,"expandedEntities":{"help":"help","help/Samples":"help/Samples"}},"tabs":{"tabs":[{"id":"0e0d042e-b363-483b-af88-4c25d76b51eb","title":"","text":"StormEvents\n| sort by StartTime desc\n| take 10","commandInContext":"StormEvents\r\n| sort by StartTime desc\r\n| take 10","executionStatus":"notStarted","clientRequestId":"KustoWebV2;693397da-c301-4482-af2b-3997cad1cf2a","entityInContext":"help/Samples","commandType":"Query","hideEmptyColumns":true}],"tabInContext":"0e0d042e-b363-483b-af88-4c25d76b51eb"},"resultCache":{"executions":{}},"settings":{"enableCodelens":false,"apiV2":true,"intellisenseV2":true,"useSemanticColorization":true,"formatResultData":true,"theme":"Light","timezone":"UTC","hideEmptyCellInRowExpand":false,"displayGridLevelColoring":true,"timeoutInMinutes":4,"weakConsistency":false,"mouseWheelZoom":true,"emptyWorkspaceOnDeepLinkQuery":false,"closeExpandViewOnClick":false,"alignRightResultNumbers":true,"useBoost":false,"showAllSeriesOnHover":false,"clickableLinks":true,"showUnknownLinkConfirmationDialog":true},"layout":{"leftPaneSize":"345.00px","isLeftPaneCollapsed":false,"isNavigationPaneCollapsed":false,"isMonacoEditorCollapsed":false,"windowWidthSizeType":"Large","expandViewLayout":0,"windowHeightSizeType":"Large"},"gridStateCache":{"states":{}},"globalStateCache":{"ctrlNeededDialogShown":false},"eTag":"dab86352-8170-4655-8cdc-7db7022d0727","callToActionLastShowMap":{"oneClickSurvey":1643038661636},"isEmptyState":false},"time":"Tue Jan 25 2022 00:54:44 GMT+0800 (Taipei Standard Time)"}